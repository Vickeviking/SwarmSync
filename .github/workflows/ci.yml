name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-and-deploy:
    name: Build, Test, Lint, Audit, Deploy
    runs-on: [self-hosted] # targets your Ubuntu runner
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # --- Core Module: Test, Lint, Audit ---
      - name: Start Postgres + Redis
        working-directory: core
        run: docker compose up -d postgres redis

      - name: Core – Tests
        working-directory: core
        run: docker compose run --rm app cargo test --all --exclude consumer

      - name: Core – Clippy
        working-directory: core
        run: docker compose run --rm app bash -c "rustup component add clippy && cargo clippy -- -D warnings"

      - name: Core – Security audit
        working-directory: core
        env:
          RUSTSEC_ALLOW_WARNINGS: "true"
        run: docker compose run --rm app bash -c "cargo install cargo-audit && cargo audit"

      - name: Tear down Core test stack
        if: ${{ success() }}
        working-directory: core
        run: docker compose down -v

      # --- Consumer Module: Test, Lint, Audit ---
      - name: Consumer – Tests
        working-directory: consumer
        run: docker compose run --rm consumer-test

      - name: Consumer – Clippy
        working-directory: consumer
        run: docker compose run --rm consumer-test bash -c "rustup component add clippy && cargo clippy -- -D warnings"

      - name: Consumer – Security audit
        working-directory: consumer
        env:
          RUSTSEC_ALLOW_WARNINGS: "true"
        run: docker compose run --rm consumer-test bash -c "cargo install cargo-audit && cargo audit"

      # --- Deploy Core (main branch only) ---
      - name: Deploy Core service
        if: ${{ github.ref == 'refs/heads/main' && success() }}
        working-directory: core
        run: |
          echo "Stopping old core containers"
          docker compose down -v
          echo "Starting updated core stack"
          docker compose up -d
          docker compose exec app diesel migration run
          docker compose exec -d app cargo run --bin core
